{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timerId","this","setState","window","setInterval","currentDate","console","info","toUTCString","slice","clearInterval","className","props","name","React","Component","getRandomName","value","now","toString","App","hasClock","clockName","document","addEventListener","event","preventDefault","oldName","debug","ReactDOM","render","getElementById"],"mappings":"sNAWaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,KACXC,QAAS,GAHb,uDAME,WAAqB,IAAD,OAClBC,KAAKC,SAAS,CACZF,QAASG,OAAOC,aAAY,WAC1B,IAAMC,EAAc,IAAIN,KAExB,EAAKG,SAAS,CACZJ,MAAOO,IAITC,QAAQC,KAAKF,EAAYG,cAAcC,OAAO,IAAK,MAClD,SAjBT,kCAqBE,WACEN,OAAOO,cAAcT,KAAKJ,MAAMG,WAtBpC,oBAyBE,WACE,OACE,sBAAKW,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SAAiCV,KAAKW,MAAMC,OAE3C,YAED,sBAAMF,UAAU,cAAhB,SACGV,KAAKJ,MAAMC,MAAMU,cAAcC,OAAO,IAAK,YAjCtD,GAA2BK,IAAMC,WCPjC,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWV,OAAO,GAE3C,MAAM,SAAN,OAAgBQ,GAGX,IAAMG,EAAb,4MACEvB,MAAQ,CACNwB,UAAU,EACVC,UAAW,WAHf,uDAME,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBAEN,EAAKxB,SAAS,CAAEmB,UAAU,OAG5BE,SAASC,iBAAiB,SAAS,SAACC,GAClCA,EAAMC,iBAEN,EAAKxB,SAAS,CAAEmB,UAAU,OAG5BlB,OAAOC,aAAY,WACjB,IAAMuB,EAAU,EAAK9B,MAAMyB,UAE3B,EAAKpB,SAAS,CACZoB,UAAWN,MAGT,EAAKnB,MAAMwB,UAEbf,QAAQsB,MAAR,uBAA8BD,EAA9B,eAA4C,EAAK9B,MAAMyB,cAExD,QA9BP,oBAiCE,WACE,OACE,sBAAKX,UAAU,MAAf,UACE,6CAECV,KAAKJ,MAAMwB,UAAY,cAAC,EAAD,CAAOR,KAAMZ,KAAKJ,MAAMyB,mBAtCxD,GAAyBR,IAAMC,WCP/Bc,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.ae8e26f9.chunk.js","sourcesContent":["import React from 'react';\n\ninterface State {\n  today: Date;\n  timerId: number;\n}\n\ninterface Props {\n  name: string;\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    today: new Date(),\n    timerId: 0,\n  };\n\n  componentDidMount() {\n    this.setState({\n      timerId: window.setInterval(() => {\n        const currentDate = new Date();\n\n        this.setState({\n          today: currentDate,\n        });\n\n        // eslint-disable-next-line no-console\n        console.info(currentDate.toUTCString().slice(-12, -4));\n      }, 1000),\n    });\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.state.timerId);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">{this.props.name}</strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends React.Component {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', (event: MouseEvent) => {\n      event.preventDefault();\n\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', (event: MouseEvent) => {\n      event.preventDefault();\n\n      this.setState({ hasClock: true });\n    });\n\n    window.setInterval(() => {\n      const oldName = this.state.clockName;\n\n      this.setState({\n        clockName: getRandomName(),\n      });\n\n      if (this.state.hasClock) {\n        // eslint-disable-next-line no-console\n        console.debug(`Renamed from ${oldName} to ${this.state.clockName}`);\n      }\n    }, 3300);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.hasClock && <Clock name={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}